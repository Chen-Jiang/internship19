import csv

'''

This file is to combine same records into one record, after identifying all the same records within a single file,
this script is used after csvFormat_output.csv is generated by program

input is the csvFormat_output.csv file
output is a csv file, which all the same records are combined as one record

'''

input = "csvFormat_output.csv"
output = "combined_same_record_output.csv"



def write_to_new_file(file):

    print("start writing...")

    with open(output,'a') as out_file:

        # write the header of the file
        fieldNames = ['unique_id','first_name','last_name','address_line','suburb','city','country','postcode','eaddress','domain','phone_number','origin']
        writer = csv.DictWriter(out_file, fieldnames=fieldNames, extrasaction='ignore')
        writer.writeheader()

        # write rows of the file
        # if the row has the same one, combine the rows into one row;
        # else if the row does not have other similiar ones, just keep it
        with open(input,encoding = "ISO-8859-1") as in_file:
            reader = csv.DictReader(in_file, delimiter=",", lineterminator=",")
            all_records = {}
            records_has_been_checked = {}
            new_record = {}
            num = 0
            n1 = 0

            for row in reader:
                # all_records[row['unique_id']] = dict(row)
                all_records[n1] = dict(row)
                n1 += 1

            for i in all_records:  # i = 0,1,2,3,4,5,6,7,8,.......
                record_item = all_records[i]
                cluster_id = record_item['Cluster ID']
                # id = record_item['unique_id']
                if cluster_id not in records_has_been_checked.keys():
                    # store the same records cluster
                    same_record = {}
                    count = 0
                    same_record[count] = record_item
                    records_has_been_checked[record_item['Cluster ID']] = record_item['Cluster ID']
                    for j in range(i+1,len(all_records)):
                        # print("row2", row2)
                        if all_records[j]['Cluster ID'] == cluster_id:
                            count += 1
                            same_record[count] = all_records[j]
                            records_has_been_checked[all_records[j]['Cluster ID']] = all_records[j]['Cluster ID']

                    if count == 0:
                        new_record[num] = record_item
                        writer.writerow(new_record[num])
                    if count > 0:
                        # use the method to combine all the same records into one record
                        # the return should also be a dictionary
                        new_record[num] = combine_same_records(same_record,fieldNames)
                        writer.writerow(new_record[num])
                    num += 1
    print("finished")
                    # print(row)

def combine_same_records(same_records,fieldNames):
    # print("more than one:",same_records)
    combined_dict = {}

    for i in range(len(fieldNames)):
        field_values = []

        if i != 10:  # except phone_numbers field
            for index in same_records:
                item = same_records[index]
                if item[fieldNames[i]] not in field_values:
                    field_values.append(item[fieldNames[i]].strip("\"").strip(" "))
            # if the rows have several different values, keep these values inside a tuple,
            # and add the tuple as the final value of this field
            if len(field_values) > 1:
                combined_dict[fieldNames[i]] = tuple(j for j in field_values)
            # if the several value of this field is the same, the final value of this field is just one value
            elif len(field_values) == 1:
                combined_dict[fieldNames[i]] = field_values[0]
        elif i == 10:
            phone_list = []
            for index in same_records:
                single_phone_list = []
                phone = same_records[index][fieldNames[i]]
                if phone != "null":
                    phone = phone.strip("(").strip(")").strip(",")
                    # print(phone)
                    if "," in phone:
                        single_phone_list = phone.split(", ")
                        for m in range(len(single_phone_list)):
                            single_phone_list[m] = single_phone_list[m].strip("\'")
                    elif "," not in phone:
                        single_phone_list.append(phone.strip("\'"))
                    # print("single_phone_list",single_phone_list)
                    phone_list.extend(single_phone_list)
            if len(phone_list) == 0:
                combined_dict[fieldNames[i]] = "null"
            else:
                # remove duplicates in the phone_list
                phone_list = list(dict.fromkeys(phone_list))
                combined_dict[fieldNames[i]] = tuple(item for item in phone_list)
            # print("phone list", combined_dict[fieldNames[i]])


    return combined_dict




write_to_new_file(input)
